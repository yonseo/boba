{"version":3,"sources":["webpack:///./src/pages/about.js","webpack:///./src/components/nav.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["AboutAvatar","AboutPage","data","className","style","maxWidth","margin","paddingBottom","src","image","childImageSharp","fluid","alt","originalName","class","to","id","float","marginTop","color","props","marginBottom","fontWeight","textAlign","homeName","pageName","Layout","children","siteTitle","site","siteMetadata","title","href"],"mappings":"ycAAA,wFAqDaA,EAAW,YAoBTC,UApEG,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAEd,kBAAC,IAAD,KAEI,yBAAKC,UAAU,OAAOC,MAAO,CAAEC,SAAS,QAAUC,OAAO,OAASC,cAAc,SAE5E,yBAAKJ,UAAU,gBAEX,yBAAKA,UAAU,SAEX,yBAAKA,UAAU,iBACf,sDAIJ,yBAAKA,UAAU,aACX,6BAEA,yBAAKK,IAAKN,EAAKO,MAAMC,gBAAgBC,MAAMH,IAAKI,IAAKV,EAAKO,MAAMC,gBAAgBG,aAAcV,UAAU,WAExG,2KAKA,yEACA,wEAEA,6BAGJ,yBAAKA,UAAU,e,+FC7BhB,aACX,IAAMD,EAAI,OAmBV,OACI,6BACI,yBAAKY,MAAM,QAEP,kBAAC,OAAD,CAAMC,GAAG,KAAI,yBAAKP,IAAKN,EAAKO,MAAMC,gBAAgBC,MAAMH,IAAKI,IAAKV,EAAKO,MAAMC,gBAAgBC,MAAME,aAAcV,UAAU,UAE3H,kBAAC,OAAD,CAAMY,GAAG,IAAID,MAAM,cAInB,kBAAC,OAAD,CAAMC,GAAG,IAAID,MAAM,cAInB,kBAAC,OAAD,CAAMC,GAAG,IAAIZ,UAAU,aAAvB,QAIA,kBAAC,OAAD,CAAMY,GAAG,UAAUZ,UAAU,aAA7B,SAIA,uBAAGa,GAAG,QAAQb,UAAU,YAAYC,MAAO,CAAEa,MAAM,QAAUC,UAAU,QACnE,uBAAGd,MAAO,CAAEe,MAAM,YAAlB,aCpCL,WAAAC,GAAK,OAClB,yBAAKhB,MAAO,CACVc,UAAU,QACVG,aAAa,SAEb,wBAAIjB,MAAO,CAAEe,MAAM,OAASG,WAAW,MAAQC,UAAU,WAAcH,EAAMI,SAA7E,IAAwFJ,EAAMK,Y,oBC8CnFC,IAxCA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAEVzB,EAAI,OAUV,OACE,oCACE,kBAAC,EAAD,CAAQ0B,UAAW1B,EAAK2B,KAAKC,aAAaC,QAC1C,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAYP,SAAS,iBAErB,wBAAIpB,MAAO,CAAEmB,UAAU,SAAWD,WAAW,MAAQH,MAAM,OAASE,aAAa,SAAjF,4BACA,yBAAKlB,UAAU,QACb,yBAAKA,UAAU,aAEb,8BAAOwB,GAEP,0CACS,uBAAGvB,MAAO,CAAEe,MAAO,SAAnB,gBADT,kBAGE,uBAAGf,MAAO,CAAEe,MAAO,QAAUa,KAAK,4BAAlC,gB","file":"component---src-pages-about-js-14f42c8e9fa2e5e873af.js","sourcesContent":["import React from \"react\"\r\nimport Layout from \"../components/layout\"\r\n//import Img from \"gatsby-image\"\r\nimport { graphql } from \"gatsby\"\r\n\r\nconst AboutPage = ({ data }) => (\r\n    \r\n    <Layout>\r\n        \r\n        <div className='card' style={{ maxWidth: `400px`, margin: `auto`, paddingBottom: `50px`}}>\r\n\r\n            <div className='card-content'>\r\n\r\n                <div className='media'>\r\n                   \r\n                    <div className='media-content'>\r\n                    <h3>About [July 9/2020] </h3>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='blog-desc'>\r\n                    <br/>\r\n                   \r\n                    <img src={data.image.childImageSharp.fluid.src} alt={data.image.childImageSharp.originalName} className=\"avatar\" />\r\n                    \r\n                    <p> \r\n                        Hello, Gong Cha PAL. This app was created due to many customer questions. So I wanted to help, not only our\r\n                        customers but our employees too.\r\n                    </p>\r\n\r\n                    <p>This app is only for our Austin locations.</p>\r\n                    <p>This app is not affiliated with Gong Cha.</p>\r\n                    \r\n                    <p></p>\r\n                </div>\r\n\r\n                <div className='media'>\r\n                \r\n                </div>\r\n                \r\n            </div>\r\n\r\n        </div>\r\n\r\n\r\n\r\n\r\n    </Layout>\r\n\r\n    \r\n)\r\n\r\n\r\nexport const AboutAvatar = graphql`\r\n    query AboutAvatar{\r\n        image: file(relativePath: {eq: \"about.png\"}) {\r\n            id\r\n            childImageSharp {\r\n                fluid {\r\n                    src\r\n                    originalName\r\n                    originalImg\r\n                }\r\n                original {\r\n                    width\r\n                    height\r\n                }\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\n\r\nexport default AboutPage","import React from \"react\"\r\n//import Img from \"gatsby-image\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport { Link } from \"gatsby\"\r\n\r\n//== NAVIGATION ==//\r\n\r\nexport default () => {\r\n    const data = useStaticQuery(graphql`\r\n        query Icon{\r\n            image: file(relativePath: {eq: \"icon.png\"}) {\r\n                id\r\n                childImageSharp {\r\n                    fluid(maxWidth: 30) {\r\n                        src\r\n                        originalName\r\n                        originalImg\r\n                    }\r\n                    original {\r\n                        width\r\n                        height\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    `\r\n    )\r\n    return (\r\n        <nav>\r\n            <div class=\"navi\">\r\n\r\n                <Link to=\"/\"><img src={data.image.childImageSharp.fluid.src} alt={data.image.childImageSharp.fluid.originalName} className=\"logo\" /></Link>\r\n\r\n                <Link to=\"#\" class=\"navi-item\">\r\n\r\n                </Link>\r\n                \r\n                <Link to=\"#\" class=\"navi-item\">\r\n\r\n                </Link>\r\n\r\n                <Link to=\"/\" className=\"navi-item\">\r\n                    HOME\r\n                </Link>\r\n\r\n                <Link to=\"/about/\" className=\"navi-item\">\r\n                    ABOUT\r\n                </Link>\r\n\r\n                <a id=\"email\" className=\"navi-item\" style={{ float: `right`, marginTop: `5px` }} >\r\n                    <b style={{ color: `#b3a5c1` }}>GUIDE</b>\r\n                </a>\r\n\r\n\r\n\r\n            </div>\r\n        </nav>\r\n    )\r\n\r\n}\r\n","import React from \"react\"\r\n\r\n\r\n//old component with no props\r\n//This component has the data provided\r\n/* export default () => (\r\n\r\n    <div style={{ color: 'green' }} >\r\n      <h1>This is a header sub-component.</h1>\r\n    </div>\r\n\r\n)\r\n*/\r\n\r\nexport default props => (\r\n  <div style={{ \r\n    marginTop: `100px`, \r\n    marginBottom: `20px`\r\n  }} >\r\n    <h3 style={{ color: `#fff`, fontWeight: `300`, textAlign: `center` }}>{props.homeName} {props.pageName}</h3>\r\n\r\n  </div>\r\n)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//What are components?\r\n//Let's think of components as bubble tea\r\n//A component can hold data or expect data. A cup can contain tea/topings \r\n//or expect tea/toppings.\r\n//Work on this later\r\n\r\n\r\n//You can think of components as cookie cutters. There are many cookie cutter shapes.\r\n//but the cookie cutter will not make cookies. You need to provide the cookie dough.\r\n//Components can contain or expect data.\r\n//\r\n\r\n//== COMPONENTS ==//\r\n\r\n//The component displays the style and layout of input data\r\n//This component expects data from somewhere else\r\n//Think of components as a block template\r\n//You can give components names to make it organized\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport NAV from \"../components/nav\"\r\nimport Breadcrumb from \"../components/header\"\r\n\r\n//== Components ==//\r\nimport Header from \"./header\"\r\n\r\n//== CSS ==//\r\n//import \"../styles/css/layout.css\"\r\nimport \"../styles/css/bulma.css\"\r\nimport \"../styles/css/custom.css\"\r\n\r\n//== JS ==//\r\n\r\n\r\n\r\nconst Layout = ({ children }) => {\r\n\r\n  const data = useStaticQuery(graphql`\r\n    query SiteTitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <>\r\n      <Header siteTitle={data.site.siteMetadata.title} />\r\n      <NAV />\r\n      <Breadcrumb homeName=\"GONG CHA PAL\" />\r\n      \r\n      <h5 style={{ textAlign: `center`, fontWeight: `400`, color: `#fff`, marginBottom: `30px`}}>A guide to ordering tea.</h5>\r\n      <div className='main'>\r\n        <div className='blog-roll'>\r\n         \r\n          <main>{children}</main>\r\n\r\n          <footer>\r\n            Â© 2020 <a style={{ color: '#fff' }} >Gong Cha PAL</a> Built with\r\n            {` `}\r\n            <a style={{ color: '#fff' }} href=\"https://www.gatsbyjs.org\">Gatsby</a>\r\n          </footer>\r\n          \r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n\r\n\r\n"],"sourceRoot":""}